// Generated by CoffeeScript 1.6.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  this.Orienter = (function() {
    function Orienter(opts) {
      this.onOrientation = __bind(this.onOrientation, this);
      this.options = opts;
      this.events = [];
      this.rotationIndex = 0;
      this.cumulative = 0;
    }

    Orienter.prototype.start = function() {
      if (!window.DeviceOrientationEvent) {
        return this.output("Orientation events not supported");
      } else {
        return window.addEventListener('deviceorientation', this.onOrientation);
      }
    };

    Orienter.prototype.onOrientation = function(event) {
      var delta, prev;
      if (!this.last()) {
        console.log(event);
        this.startRotationValue = event.alpha;
      }
      this.events.unshift(event);
      while (this.events.length > 3) {
        this.events.pop();
      }
      if (prev = this.previous()) {
        delta = event.alpha - prev.alpha;
        if (delta > 300) {
          this.rotationIndex -= 1;
        } else if (delta < -300) {
          this.rotationIndex += 1;
        }
      }
      return this.cumulative = this.rotationIndex * 360 + event.alpha - this.startRotationValue;
    };

    Orienter.prototype.previous = function() {
      return this.events[1];
    };

    Orienter.prototype.last = function() {
      return this.events[0];
    };

    return Orienter;

  })();

}).call(this);
